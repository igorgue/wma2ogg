#!/usr/bin/env python

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# wma2ogg 0.1 - Program to covert 'wma' to 'ogg'
# 
# Copyright (c) Igor Guerrero Fonseca
# Writen by Igor Guerrero Fonseca (igfgt1@gmail.com)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# This file is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.

# In fact this program can convert all types of media supported por 
# 'mplayer' (including videos) just change the extensions of the files 
# from '.*' to '.wma'(mv Tool\ -\ Sober.flv Tool\ -\ Sober.wma) before beginning 
# TODO: id tag support
# TODO: make a man
# TODO: make it work with all types of media without rename

import os
import commands
from glob import glob
from sys import argv, exit

global __version__, home, mplayer, oggenc, recur, noArgs

__version__ = 0.1
home = os.environ ['HOME']
mplayer = ''
oggenc = ''
recur = False
noArgs = False

def convert (media):
    """Convert the 'media' to ogg"""
    global mplayer, oggenc, home
    tmp = os.getcwd ()
    os.chdir (home) # We change to $HOME to get write permission
    print 'Converting... ' + media
    # TODO: make it work with another decoder and encoder
    os.system (mplayer + ' ' + repr (media) + ' -ao pcm') # convert it to wav
    os.system (oggenc + ' audiodump.wav -b 128 -o ' + repr (media.replace ('.wma', '.ogg'))) # we convert it to ogg and rename the file
    os.remove (media)
    os.remove ('audiodump.wav') # 'audiodump.wav' is generated by mplayer
    os.chdir (tmp)

def checkArgs ():
    """Check all the arguments to find options"""
    global noArgs, recur
    argv.remove (argv[0]) # Because is the name of the program
    for arg in argv:
        if arg == '--help' or arg == '--usage':
            print 'Usage: wma2ogg [directory | media.wma]'
            exit (0)
        if arg == '--version' or arg == '-V':
            print 'wma2ogg - ' + str (__version__)
            exit (0)
        if arg == '-R':
            recur = True
            argv.remove ('-R')
    if len (argv) == 1:
        noArgs = True

def checkPrograms ():
    """Check if the decoder and encoder exists"""
    global mplayer, oggenc
    # FIXME: find a better way to find the programs
    mplayer = commands.getoutput ('which mplayer')
    if mplayer == '': # there's not 'mplayer'
        print 'This program require mplayer(with win32 codecs) to run'
        exit (1)
    oggenc = commands.getoutput ('which oggenc')
    if oggenc == '': # there's not 'vorbistools'
        print 'This program require oggenc to run; can be found in vorbistools'
        exit (1)

def main ():
    """The main program"""
    global mplayer, oggenc, recur, noArgs
    checkArgs ()
    checkPrograms ()
    print noArgs, recur, mplayer, oggenc
    for arg in argv:
        if noArgs == True:
            if recur == True:
                fileList = commands.getoutput ('find ' + arg + ' -name \'*.wma\'').split ('\n')
            else:
                fileList = glob (os.getcwd () + '/' + '*.wma')
            if fileList == []:
                print 'There\'s no \'*.wma\' in the directory'
                exit (1)
            for media in fileList:
                convert (media)
            exit (0)
        elif os.path.exists (arg):
            if arg.endswith ('.wma'): # Convert only one file
                convert (arg)
            else:
                if not arg.endswith ('/'):
                    arg += '/'
                if recur == True:
                    fileList = commands.getoutput ('find ' + arg + ' -name \'*.wma\'').split ('\n')
                else:
                    fileList = glob (arg + '*.wma')
                for media in fileList:
                    convert (media)
        else:
            print arg + ':' + 'there\'s no file or directory'
            print 'Usage: wma2ogg [directory | media.wma]'
            print 'Next...'

if __name__ == '__main__':
    main ()
